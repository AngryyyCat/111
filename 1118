void setup() {
  size(800, 800);
}


void draw() {
  background(255); 
  for (int p=0;p<15;p++){

  float squareSize = 30+30*p; 
  float borderWidth = 15; 

  float x = width / 2 - squareSize / 2;
  float y = height / 2 - squareSize / 2;

  color[] colors = {
    color(204,8,32), // 红
    color(52,165,77),// 绿
    color(32,111,186), // 蓝
    color(252,194,0), // 黄
    color(102,59,134), // 紫
    color(223,44,28) // 橙
  };


  for (int i = 0; i < 4; i++) {
    strokeWeight(borderWidth); 
   
    
    // 起终点
    float startX = 0; 
    float startY = 0;
    float endX = 0;
    float endY = 0;
    
    float segmentLength = squareSize / 6;
    
    /////////////////////////////////////////////////////////
    if (i == 0) {
      startX = x;
      startY = y;
      endX = x + squareSize;
      endY = y;
      
      for (int j = 0; j < 6; j++) {
        float segmentStartX = startX + j * segmentLength;
        float segmentStartY = startY;
        float segmentEndX = startX + (j + 1) * segmentLength;
        float segmentEndY = startY;

        // 颜色
        stroke(colors[int(random((i + j) % 6))]);
         strokeJoin(MITER);
        line(segmentStartX, segmentStartY, segmentEndX, segmentEndY);
      }
    }
    else if (i == 1) {
      startX = x + squareSize;
      startY = y;
      endX = x + squareSize;
      endY = y + squareSize;
      
      for (int j = 0; j < 6; j++) {
        float segmentStartX = startX;
        float segmentStartY = startY + j * segmentLength;
        float segmentEndX = startX;
        float segmentEndY = startY + (j + 1) * segmentLength;

        // 颜色
         stroke(colors[int(random((i + j) % 6))]);
         strokeJoin(MITER);
        line(segmentStartX, segmentStartY, segmentEndX, segmentEndY);
      }
    }
    else if (i == 2) {
      startX = x + squareSize;
      startY = y + squareSize;
      endX = x;
      endY = y + squareSize;
      
      for (int j = 0; j < 6; j++) {
        float segmentStartX = startX - j * segmentLength;
        float segmentStartY = startY;
        float segmentEndX = startX - (j + 1) * segmentLength;
        float segmentEndY = startY;

        //颜色
        stroke(colors[int(random((i + j) % 6))]);
         strokeJoin(MITER);
        line(segmentStartX, segmentStartY, segmentEndX, segmentEndY);
      }
    } 
    else if (i == 3) {
      startX = x;
      startY = y + squareSize;
      endX = x;
      endY = y;

      for (int j = 0; j < 6; j++) {
        float segmentStartX = startX;
        float segmentStartY = startY - j * segmentLength;
        float segmentEndX = startX;
        float segmentEndY = startY - (j + 1) * segmentLength;

        // 颜色
       stroke(colors[int(random((i + j) % 6))]);
         strokeJoin(MITER);
        line(segmentStartX, segmentStartY, segmentEndX, segmentEndY);
        
      }}
    }
  }
}
